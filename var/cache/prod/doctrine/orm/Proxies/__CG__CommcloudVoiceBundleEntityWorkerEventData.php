<?php

namespace Proxies\__CG__\Commcloud\VoiceBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class WorkerEventData extends \Commcloud\VoiceBundle\Entity\WorkerEventData implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'id', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workersid', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workername', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workerattributes', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workeractivitysid', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workeractivityname', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workertimeinprevactivity', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workerprevactivitysid'];
        }

        return ['__isInitialized__', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'id', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workersid', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workername', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workerattributes', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workeractivitysid', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workeractivityname', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workertimeinprevactivity', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\WorkerEventData' . "\0" . 'workerprevactivitysid'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (WorkerEventData $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkersid($workersid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkersid', [$workersid]);

        return parent::setWorkersid($workersid);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkersid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkersid', []);

        return parent::getWorkersid();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkername($workername)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkername', [$workername]);

        return parent::setWorkername($workername);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkername', []);

        return parent::getWorkername();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkerattributes($workerattributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkerattributes', [$workerattributes]);

        return parent::setWorkerattributes($workerattributes);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkerattributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkerattributes', []);

        return parent::getWorkerattributes();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkeractivitysid($workeractivitysid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkeractivitysid', [$workeractivitysid]);

        return parent::setWorkeractivitysid($workeractivitysid);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkeractivitysid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkeractivitysid', []);

        return parent::getWorkeractivitysid();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkeractivityname($workeractivityname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkeractivityname', [$workeractivityname]);

        return parent::setWorkeractivityname($workeractivityname);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkeractivityname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkeractivityname', []);

        return parent::getWorkeractivityname();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkertimeinprevactivity($workertimeinprevactivity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkertimeinprevactivity', [$workertimeinprevactivity]);

        return parent::setWorkertimeinprevactivity($workertimeinprevactivity);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkertimeinprevactivity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkertimeinprevactivity', []);

        return parent::getWorkertimeinprevactivity();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkerprevactivitysid($workerprevactivitysid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkerprevactivitysid', [$workerprevactivitysid]);

        return parent::setWorkerprevactivitysid($workerprevactivitysid);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkerprevactivitysid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkerprevactivitysid', []);

        return parent::getWorkerprevactivitysid();
    }

}
