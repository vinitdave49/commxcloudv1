<?php

namespace Proxies\__CG__\Commcloud\VoiceBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class HtWorkeractdurationData extends \Commcloud\VoiceBundle\Entity\HtWorkeractdurationData implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'id', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'workersid', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'start_time', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'end_time', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'task_assigned', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'activitysid', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'activityname', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'min_duration', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'max_duration', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'avg_duration', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'total_duration'];
        }

        return ['__isInitialized__', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'id', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'workersid', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'start_time', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'end_time', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'task_assigned', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'activitysid', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'activityname', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'min_duration', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'max_duration', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'avg_duration', '' . "\0" . 'Commcloud\\VoiceBundle\\Entity\\HtWorkeractdurationData' . "\0" . 'total_duration'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (HtWorkeractdurationData $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkersid($workersid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkersid', [$workersid]);

        return parent::setWorkersid($workersid);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkersid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkersid', []);

        return parent::getWorkersid();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartTime($startTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartTime', [$startTime]);

        return parent::setStartTime($startTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartTime', []);

        return parent::getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndTime($endTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndTime', [$endTime]);

        return parent::setEndTime($endTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndTime', []);

        return parent::getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaskAssigned($taskAssigned)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaskAssigned', [$taskAssigned]);

        return parent::setTaskAssigned($taskAssigned);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaskAssigned()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaskAssigned', []);

        return parent::getTaskAssigned();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivitysid($activitysid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivitysid', [$activitysid]);

        return parent::setActivitysid($activitysid);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivitysid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivitysid', []);

        return parent::getActivitysid();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivityname($activityname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivityname', [$activityname]);

        return parent::setActivityname($activityname);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivityname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivityname', []);

        return parent::getActivityname();
    }

    /**
     * {@inheritDoc}
     */
    public function setMinDuration($minDuration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinDuration', [$minDuration]);

        return parent::setMinDuration($minDuration);
    }

    /**
     * {@inheritDoc}
     */
    public function getMinDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinDuration', []);

        return parent::getMinDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxDuration($maxDuration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxDuration', [$maxDuration]);

        return parent::setMaxDuration($maxDuration);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxDuration', []);

        return parent::getMaxDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvgDuration($avgDuration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvgDuration', [$avgDuration]);

        return parent::setAvgDuration($avgDuration);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvgDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvgDuration', []);

        return parent::getAvgDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalDuration($totalDuration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalDuration', [$totalDuration]);

        return parent::setTotalDuration($totalDuration);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalDuration', []);

        return parent::getTotalDuration();
    }

}
